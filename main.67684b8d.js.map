{"version":3,"sources":["scripts/main.js"],"names":["createMessage","text","type","newMessage","document","createElement","dataset","qa","className","textContent","body","append","firstPromise","Promise","resolve","reject","click","addEventListener","e","setTimeout","Error","secondPromise","thirdPromise","clickLeft","clickRight","button","then","result","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAgB,SAACC,EAAMC,GACrBC,IAAAA,EAAaC,SAASC,cAAc,OAE1CF,EAAWG,QAAQC,GAAK,eAExBJ,EAAWK,UAAuBN,WAAAA,OAAAA,GAElCC,EAAWM,YAAcR,EAEzBG,SAASM,KAAKC,OAAOR,IAGjBS,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACrCC,IAAAA,GAAQ,EAEZZ,SAASa,iBAAiB,QAAS,SAAAC,GACjCF,GAAQ,EAERF,EAAQ,gCAGVK,WAAW,YACK,IAAVH,GACFD,EAAO,IAAIK,MAAM,gCAElB,OAGCC,EAAgB,IAAIR,QAAQ,SAACC,GACjCV,SAASa,iBAAiB,cAAe,SAAAC,GACvCJ,EAAQ,iCAGVV,SAASa,iBAAiB,QAAS,SAAAC,GACjCJ,EAAQ,mCAINQ,EAAe,IAAIT,QAAQ,SAACC,GAC5BS,IAAAA,GAAY,EACZC,GAAa,EAEjBpB,SAASa,iBAAiB,YAAa,SAAAC,GACpB,IAAbA,EAAEO,SACJF,GAAY,GAGG,IAAbL,EAAEO,SACJD,GAAa,GAGXD,GAAaC,GACfV,EAAQ,kCAKdF,EACGc,KAAK,SAAAC,GAAU3B,OAAAA,EAAc2B,EAAQ,aACrCC,MAAM,SAAAC,GAAS7B,OAAAA,EAAc6B,EAAO,aAEvCR,EACGK,KAAK,SAAAC,GAAU3B,OAAAA,EAAc2B,EAAQ,aAExCL,EACGI,KAAK,SAAAC,GAAU3B,OAAAA,EAAc2B,EAAQ","file":"main.67684b8d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst createMessage = (text, type) => {\n  const newMessage = document.createElement('div');\n\n  newMessage.dataset.qa = 'notification';\n\n  newMessage.className = `message ${type}`;\n\n  newMessage.textContent = text;\n\n  document.body.append(newMessage);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  let click = false;\n\n  document.addEventListener('click', e => {\n    click = true;\n\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    if (click === false) {\n      reject(new Error('First promise was rejected'));\n    }\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('contextmenu', e => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('click', e => {\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let clickLeft = false;\n  let clickRight = false;\n\n  document.addEventListener('mousedown', e => {\n    if (e.button === 0) {\n      clickLeft = true;\n    }\n\n    if (e.button === 2) {\n      clickRight = true;\n    }\n\n    if (clickLeft && clickRight) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfirstPromise\n  .then(result => createMessage(result, 'success'))\n  .catch(error => createMessage(error, 'warning'));\n\nsecondPromise\n  .then(result => createMessage(result, 'success'));\n\nthirdPromise\n  .then(result => createMessage(result, 'success'));\n"]}